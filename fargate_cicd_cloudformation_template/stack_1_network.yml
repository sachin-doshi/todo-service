AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC for Fargate Test Node Template Test with CICD'
Parameters:
  TagKey:
    Default: AppType
    Description: Fargate tagging
    Type: String
  TagValue:
    Default: Fargate-CICD-Node-Template
    Description: Fargate-CICD-Node-Template
    Type: String
Mappings:
  SubnetConfig:
    VPC:
      CIDR: '10.0.0.0/16'
    PublicOne:
      CIDR: '10.0.0.0/24'
    PublicTwo:
      CIDR: '10.0.1.0/24'
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]
      Tags:
        - Key : !Ref TagKey
          Value : !Ref TagValue
  PublicSubnetOne:
    Type : AWS::EC2::Subnet
    Properties :
      AvailabilityZone : !Select 
        - 0 
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, PublicOne, CIDR]
      MapPublicIpOnLaunch: true
      Tags:
        - Key : !Ref TagKey
          Value : !Ref TagValue
  PublicSubnetTwo:
    Type : AWS::EC2::Subnet
    Properties :
      AvailabilityZone : !Select 
        - 1 
        - Fn::GetAZs: !Ref 'AWS::Region'
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, PublicTwo, CIDR]
      MapPublicIpOnLaunch: true
      Tags:
        - Key : !Ref TagKey
          Value : !Ref TagValue
  InternetGateway:
    Type : AWS::EC2::InternetGateway
    Properties :
      Tags:
        - Key : !Ref TagKey
          Value : !Ref TagValue
  GatewayAttachement:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      InternetGatewayId : !Ref 'InternetGateway'
      VpcId: !Ref 'VPC'
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref 'VPC'
      Tags:
        - Key : !Ref TagKey
          Value : !Ref TagValue
  PublicRoute :
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'InternetGateway'
      RouteTableId: !Ref 'PublicRouteTable'
  PublicSubnetOneRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'PublicSubnetOne'
  PublicSubnetTwoRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'PublicSubnetTwo'
Outputs:
  VPCId:
    Description: The ID of the VPC that this stack is deployed in
    Value: !Ref VPC
    Export:
      Name: !Join
      - ':'
      - -  !Ref 'AWS::StackName'
        -  'VPCId'
  PublicSubnetOne:
    Description: Public subnet one
    Value: !Ref 'PublicSubnetOne'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicSubnetOne' ] ]
  PublicSubnetTwo:
    Description: Public subnet two
    Value: !Ref 'PublicSubnetTwo'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'PublicSubnetTwo' ] ]